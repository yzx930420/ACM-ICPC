// 2013杭州邀请赛 J Mex

#include <stdio.h>
#include <string.h>
#include <map>
#include <iostream>

using namespace std;

typedef long long LL;
const int MAXN = 200010;

int n;
int next[MAXN], arr[MAXN], nx[MAXN], mex[MAXN];
bool vis[MAXN];

int main(){
    while (scanf("%d", &n), n) {
        memset(vis, 0, sizeof(vis));
        mex[0] = 0;

        LL ans = 0, s = 0;
        map<int, int> mp;

        int p = 0;
        nx[0] = n + 1;
        for (int i = 1; i <= n; i++) {
            scanf("%d", &arr[i]);
            vis[arr[i]] = true;
            if (arr[i] > n) arr[i] = n + 1;
            while (vis[p]) ++p;
            mex[i] = p;
            mp[mex[i]] = i;
            s += mex[i];
            nx[i] = n + 1;
        }

        for (int i = n; i >= 1; i--) {
            next[i] = nx[arr[i]];
            nx[arr[i]] = i;
        }

        map<int, int>::iterator iter1, iter2;

        for (map<int, int>::iterator iter = mp.begin(); iter != mp.end(); iter++) {
            printf("mp[%d] = %d\n", iter->first, iter->second);
        }

        ans = s;
        cout << "s = " << s <<endl;
        for (int i = 1; i <= n - 1; i++) {
            mp[-1] = i;
            iter2 = iter1 = mp.lower_bound(arr[i]);
            //if (iter1 == mp.end()) cout <<" hehe"<<endl;
            iter2--;
            int pre = max(i, iter2->second);
            int cnt = 0;
            if (!arr[i]) --s;
            while (iter1 != mp.end() && iter1->second < next[i]) {
                s -= (iter1->second - pre) * iter1->first;
                cnt += iter1->second - pre;
                pre = iter1->second;
                iter2 = iter1++;
                mp.erase(iter2);
            }
            if (pre < next[i] - 1) {
                s -= (next[i] - 1 - pre) * iter1->first;
                cnt += next[i] - 1 - pre;
            }
            if (!mp.count(arr[i])){
                mp[arr[i]] = next[i] - 1;
            }
            s += cnt * arr[i];
            cout << "s = " << s <<endl;
            for (map<int, int>::iterator iter = mp.begin(); iter != mp.end(); iter++) {
                printf("mp[%d] = %d\n", iter->first, iter->second);
            }
            ans += s;
        }
        cout << ans << endl;
    }
    return 0;
}

